{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dngur\\\\Desktop\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\\\\\\uB9AC\\uC561\\uD2B8\\\\\\uC785\\uBB38\\\\eaxm\\\\src\\\\Chapter10\\\\Calculator.js\";\nimport React from 'react';\nimport TempertureInput from './TemperatureInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"water boil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"water not boil\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nfunction toCelsius(f) {\n  return (f - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(c) {\n  return c * 9 / 5 + 32;\n}\n\nfunction tryConvert(t, c) {\n  const input = parseFloat(t);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = c(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCelsiusChange = temperture => {\n      this.setState({\n        scale: 'c',\n        temperture: temperture\n      });\n    };\n\n    this.handleFahrenheitChange = temperture => {\n      this.setState({\n        scale: 'f',\n        temperture: temperture\n      });\n    };\n\n    this.state = {\n      scale: 'c',\n      temperture: ''\n    };\n  }\n\n  render() {\n    const {\n      scale,\n      temperture\n    } = this.state;\n    console.log();\n    const celsius = scale === 'f' ? tryConvert(temperture, toCelsius) : temperture;\n    const fahrenheit = scale === 'c' ? tryConvert(temperture, toFahrenheit) : temperture;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TempertureInput, {\n        scale: \"c\",\n        temperture: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TempertureInput, {\n        scale: \"f\",\n        temperture: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["C:/Users/dngur/Desktop/프론트엔드/리액트/입문/eaxm/src/Chapter10/Calculator.js"],"names":["React","TempertureInput","BoilingVerdict","props","celsius","toCelsius","f","toFahrenheit","c","tryConvert","t","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","Component","constructor","handleCelsiusChange","temperture","setState","scale","handleFahrenheitChange","state","render","console","log","fahrenheit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAGA,KAAK,CAACC,OAAN,IAAiB,GAApB,EAAyB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KALQF,c;;AAOT,SAASG,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,SAAO,CAACA,CAAC,GAAG,EAAL,IAAW,CAAX,GAAe,CAAtB;AACH;;AAED,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrB,SAAQA,CAAC,GAAG,CAAJ,GAAQ,CAAT,GAAc,EAArB;AACH;;AAED,SAASC,UAAT,CAAoBC,CAApB,EAAuBF,CAAvB,EAA0B;AACtB,QAAMG,KAAK,GAAGC,UAAU,CAACF,CAAD,CAAxB;;AACA,MAAIG,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACrB,WAAO,EAAP;AACH;;AACD,QAAMI,MAAM,GAAGP,CAAC,CAACG,KAAD,CAAhB;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AAEA,SAAOC,OAAO,CAACG,QAAR,EAAP;AACH;;AAED,MAAMC,UAAN,SAAyBpB,KAAK,CAACqB,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACnB,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBoB,mBATmB,GASIC,UAAD,IAAgB;AAClC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcF,QAAAA,UAAU,EAAEA;AAA1B,OAAd;AACH,KAXkB;;AAAA,SAanBG,sBAbmB,GAaOH,UAAD,IAAgB;AACrC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcF,QAAAA,UAAU,EAAEA;AAA1B,OAAd;AACH,KAfkB;;AAGf,SAAKI,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAG,GADC;AAETF,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAUDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA,KAAF;AAASF,MAAAA;AAAT,QAAwB,KAAKI,KAAnC;AACAE,IAAAA,OAAO,CAACC,GAAR;AACA,UAAM3B,OAAO,GAAGsB,KAAK,KAAK,GAAV,GAAgBjB,UAAU,CAACe,UAAD,EAAanB,SAAb,CAA1B,GAAoDmB,UAApE;AACA,UAAMQ,UAAU,GAAGN,KAAK,KAAK,GAAV,GAAgBjB,UAAU,CAACe,UAAD,EAAajB,YAAb,CAA1B,GAAuDiB,UAA1E;AAEA,wBACI;AAAA,8BACI,QAAC,eAAD;AACI,QAAA,KAAK,EAAC,GADV;AAEI,QAAA,UAAU,EAAEpB,OAFhB;AAGI,QAAA,mBAAmB,EAAE,KAAKmB;AAH9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,eAAD;AACI,QAAA,KAAK,EAAC,GADV;AAEI,QAAA,UAAU,EAAES,UAFhB;AAGI,QAAA,mBAAmB,EAAE,KAAKL;AAH9B;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,cAAD;AACI,QAAA,OAAO,EAAEf,UAAU,CAACR,OAAD;AADvB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAxCoC;;AA4CzC,eAAegB,UAAf","sourcesContent":["import React from 'react';\r\nimport TempertureInput from './TemperatureInput';\r\n\r\nfunction BoilingVerdict(props) {\r\n    if(props.celsius >= 100) {\r\n        return <p>water boil</p>\r\n    }\r\n    return <p>water not boil</p>\r\n}\r\n\r\nfunction toCelsius(f) {\r\n    return (f - 32) * 5 / 9;\r\n}\r\n\r\nfunction toFahrenheit(c) {\r\n    return (c * 9 / 5) + 32;\r\n}\r\n\r\nfunction tryConvert(t, c) {\r\n    const input = parseFloat(t);\r\n    if (Number.isNaN(input)) {\r\n        return '';\r\n    }\r\n    const output = c(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n\r\n    return rounded.toString();\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            scale : 'c',\r\n            temperture: ''\r\n        }\r\n    }\r\n\r\n    handleCelsiusChange = (temperture) => {\r\n        this.setState({ scale: 'c', temperture: temperture})\r\n    }\r\n\r\n    handleFahrenheitChange = (temperture) => {\r\n        this.setState({ scale: 'f', temperture: temperture})\r\n    }\r\n\r\n    render() {\r\n        const { scale, temperture } = this.state;\r\n        console.log();\r\n        const celsius = scale === 'f' ? tryConvert(temperture, toCelsius) : temperture;\r\n        const fahrenheit = scale === 'c' ? tryConvert(temperture, toFahrenheit) : temperture;\r\n        \r\n        return (\r\n            <div>\r\n                <TempertureInput\r\n                    scale='c'\r\n                    temperture={celsius}\r\n                    onTemperatureChange={this.handleCelsiusChange} />\r\n\r\n                <TempertureInput\r\n                    scale='f'\r\n                    temperture={fahrenheit}\r\n                    onTemperatureChange={this.handleFahrenheitChange} />\r\n\r\n                <BoilingVerdict\r\n                    celsius={parseFloat(celsius)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}